# .github/workflows/ci.yml

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    name: Build & Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry and pip
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ matrix.python-version }}-
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: python -m pip install --upgrade pip poetry

      - name: Install dependencies (including FastAPI)
        # This ensures both runtime and testing dependencies (pytest, flake8, fastapi, uvicorn, etc.)
        run: poetry install --no-interaction

      - name: Run unit tests (with coverage XML)
        run: |
          poetry run pytest \
            --maxfail=1 \
            --disable-warnings \
            -q \
            --cov=src/ml_ids_analyzer \
            --cov-report=xml
          
      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11' && success()
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml

      - name: Lint with Flake8
        run: poetry run flake8 --config setup.cfg src/ml_ids_analyzer tests

      - name: Test API endpoints
        run: poetry run pytest tests/test_api.py